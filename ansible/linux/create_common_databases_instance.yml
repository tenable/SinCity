# install_vulnerable_webapp.yml
---
- hosts: localhost
  vars_files:
    - './vars/research.yml'
  gather_facts: false
  tasks:
    - name: Create Security group
      amazon.aws.ec2_group:
        name: common-databases-group
        description: Common databases security groups and interfaces
        vpc_id: '{{ vpc_id }}'
        # region: eu-west-1
        rules:
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8081
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 5432
            to_port: 5432
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 1433
            to_port: 1433
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 27017
            to_port: 27017
            cidr_ip: 0.0.0.0/0


    - name: Launch ec2 instance
      amazon.aws.ec2_instance:
        key_name: research-ssh-key
        instance_type: t2.medium
        image_id: '{{ centos_ami }}'
        wait: yes
        security_group: common-databases-group
        vpc_subnet_id: '{{ subnet_id }}'
        exact_count: 1
        network:
          assign_public_ip: yes
        tags:
          Name: common-databases
        state: running

    - name: Get ec2 instance information
      amazon.aws.ec2_instance_info:
        filters:
          'tag:Name': 'common-databases'
          instance-state-name: [ "running"]
      register: ec2

    - name: Print the IP address of the server
      ansible.builtin.debug:
        msg: 'Server IP address: {{ ec2.instances[0].public_ip_address }}'

    - name: Add instance to hosts
      add_host:
        name: '{{ ec2.instances[0].public_ip_address }}'
        groups: launched

    - name: Wait for SSH to come up
      local_action: wait_for
                    host={{ ec2.instances[0].public_ip_address }}
                    port=22
                    state=started
      with_items: "{{ ec2.instances }}"

    - name: waiting for a few seconds to let the machine start
      pause:
        seconds: 20

- hosts: launched
  roles:
    - install-common-deps
    - docker-compose
    - python37
    - common_databases
